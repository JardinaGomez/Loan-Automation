Attribute VB_Name = "Module2"
Sub RemoveMDate()

' this macro removes the maturity date column for every section exception for "Matured" and "Non-Accrual"

Dim ws As Worksheet
Dim colMDate As Long, colNA As Long, colNPDD As Long ' columns maturity date, non-accrual date, and next payment due date
Dim Matured As Long ' Matured section
Dim NonAccrual As Long ' Non-accrual section
Dim lastRow As Long, i As Long
 'Set the worksheet
    Set ws = ThisWorkbook.Worksheets("Pursuit-CDC")
    If ws Is Nothing Then
        MsgBox "Sectioned Data worksheet not found!"
        Exit Sub
    End If
    
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row
    
' Find the matured section
    For i = 14 To lastRow
        If ws.Cells(i, 1).Value = "Matured" Then
            Matured = i
        End If
        If ws.Cells(i, 1).Value = "Non-Accrual" Then
            NonAccrual = i
        End If
        If Matured > 0 And NonAccrual > 0 Then Exit For ' exit once both sections are found
    Next i
    
' FInd maturity date and non-accrual date  column to remove

    colMDate = FindHeaderCol19(ws, "Maturity Date")
    colNA = FindHeaderCol19(ws, "Non-Accrual Date")
    colNPDD = FindHeaderCol19(ws, "Next Payment Due Date")
    colAm = FindHeaderCol19(ws, "Amount Past Due")
    
    If colMDate = 0 And colNA = 0 And colNPDD = 0 Then
        MsgBox "columns not found"
        Exit Sub
    End If
    
    ' defining range from row 19 to last row bef
   
   ' Remove Maturity Date and Non-Accrual Date cells where applicable
   'For i = NonAccrual To lastRow ' removeing amount past due in non accrual section
       ' If colAm > 0 Then ws.Range(ws.Cells(i, colAm), ws.Cells(i, colAm)).Delete Shift:=xlToLeft
    'Next i
    
    For i = 18 To Matured - 1
    
     If colNA > 0 Then ws.Range(ws.Cells(i, colNA), ws.Cells(i, colNA)).Delete Shift:=xlToLeft
    If colMDate > 0 Then ws.Range(ws.Cells(i, colMDate), ws.Cells(i, colMDate)).Delete Shift:=xlToLeft
       
    Next i

    ' Remove Next Payment Due Date between Matured and Non-Accrual
    
    For i = Matured To NonAccrual - 2
     If colMDate > 0 Then ws.Range(ws.Cells(i, colNA), ws.Cells(i, colNA)).Delete Shift:=xlToLeft
        If colNPDD > 0 Then ws.Range(ws.Cells(i, colNPDD), ws.Cells(i, colNPDD)).Delete Shift:=xlToLeft
        
    Next i
    
    For i = NonAccrual To lastRow
        If colAm > 0 Then ws.Range(ws.Cells(i, colAm), ws.Cells(i, colAm)).Delete Shift:=xlToLeft
    Next i

    
End Sub
Sub DeleteColumnsWithEmptyCells()
    Dim ws As Worksheet
    Dim checkRow As Long
    Dim lastCol As Long
    Dim col As Long
    
    ' Set the worksheet
    Set ws = ThisWorkbook.Worksheets("Pursuit-CDC")
    
    ' Define the row to check for empty cells
    checkRow = 19 ' Change this to the row number you want to check
    
    ' Find the last column with data in the row
    lastCol = ws.Cells(checkRow, ws.Columns.Count).End(xlToLeft).Column
    
    ' Loop through columns from right to left to avoid skipping columns after deletion
    For col = lastCol To 1 Step -1
        ' Check if the cell in the specified row is empty
        If IsEmpty(ws.Cells(checkRow, col).Value) Then
            ' Delete the entire column and shift left
            ws.Columns(col).Delete Shift:=xlShiftToLeft
        End If
    Next col
End Sub

Sub DeleteEmptyCells()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long, j As Long
    
    ' Set the worksheet to the active sheet
    Set ws = ThisWorkbook.Worksheets("Pursuit-CDC")
    
    ' Find the last row in the sheet
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).row
    
    ' Loop through each row starting from row 4 to the last row
    For i = 4 To lastRow
        ' Loop through the first 30 columns
        For j = 1 To 30
            ' If the cell is empty, delete it and shift the cells to the left
            If ws.Cells(i, j).Value = "" Then
                ws.Cells(i, j).Delete Shift:=xlToLeft
            End If
        Next j
    Next i
End Sub
Sub DeleteEmptyCellsAndShiftLeft_Faster()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long, j As Long
    
    ' Turn off screen updating, calculations, and events to speed up the macro
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    
    ' Set the worksheet to the active sheet
    Set ws = ThisWorkbook.Worksheets("Pursuit-CDC")
    
    ' Find the last row in the sheet
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).row
    
    ' Loop through each row starting from row 4 to the last row
    For i = 4 To lastRow
        ' Loop through the first 30 columns
        For j = 30 To 1 Step -1 ' Loop backwards to avoid issues after shifting cells
            ' If the cell is empty, delete it and shift the cells to the left
            If IsEmpty(ws.Cells(i, j).Value) Then
                ws.Cells(i, j).Delete Shift:=xlToLeft
            End If
        Next j
    Next i
    
    ' Turn screen updating, calculations, and events back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.EnableEvents = True
End Sub





Sub MoveAmountPastDue()
    ' This macro moves the "Amount Past Due" column in front of the "Risk Factor" column
    Dim ws As Worksheet
    Dim colAmountPastDue As Long, colRiskFactor As Long
    Dim lastRow As Long, lastRowN As Long
    Dim blankColsOffset As Long
    
    ' Set the worksheet
    Set ws = ThisWorkbook.Worksheets("Pursuit-CDC")
    
    ' Find the last row with data
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row
    
    ' Find the columns for "Amount Past Due" and "Risk Factor"
     colRiskFactor = FindHeaderCol2(ws, "Risk Factor")
    colAmountPastDue = 1 + FindHeaderCol2(ws, "Amount Past Due")
  
    
    ' Check if both columns are found
    If colAmountPastDue = 0 Or colRiskFactor = 0 Then
        MsgBox "Either 'Amount Past Due' or 'Risk Factor' column not found!"
        Exit Sub
    End If
    
    ' Determine the offset for the blank columns (assumes 1 blank column between each used column)
    blankColsOffset = 1
    
    ' Cut the "Amount Past Due" column
    ws.Columns(colAmountPastDue).Cut
    
    ' insert a blank column to insert amount past due
    
    ' Insert the "Amount Past Due" column before the "Risk Factor" column
    ws.Columns(colRiskFactor).Insert Shift:=xlToRight
    
    ' Optional: delete the now-empty column where "Amount Past Due" was originally
    If colAmountPastDue < colRiskFactor Then
        ws.Columns(colRiskFactor).Delete
    Else
       ' ws.Columns(colAmountPastDue).Delete
    End If
    
    
    ' DO the same for non-accrual tab
     ' Set the worksheet
    Set ws = ThisWorkbook.Worksheets("Non-Accrual - $0")
    
    ' Find the last row with data
    lastRowN = ws.Cells(ws.Rows.Count, "A").End(xlUp).row
    
    ' Find the columns for "Amount Past Due" and "Risk Factor"
     colRiskFactor = FindHeaderCol2(ws, "Risk Factor")
    colAmountPastDue = 3 + FindHeaderCol2(ws, "SBA Gty%")
  
    
    ' Check if both columns are found
    If colAmountPastDue = 0 Or colRiskFactor = 0 Then
        MsgBox "Either 'Amount Past Due' or 'Risk Factor' column not found!"
        Exit Sub
    End If
    
    ' Determine the offset for the blank columns (assumes 1 blank column between each used column)
    blankColsOffset = 1
    
    ' Cut the "Amount Past Due" column
    ws.Columns(colAmountPastDue).Cut
    
    ' Insert the "Amount Past Due" column before the "Risk Factor" column
    ws.Columns(colRiskFactor - blankColsOffset).Insert Shift:=xlToRight
    
    ' Optional: delete the now-empty column where "Amount Past Due" was originally
    If colAmountPastDue < colRiskFactor Then
        ws.Columns(colRiskFactor).Delete
    Else
        'ws.Columns(colAmountPastDue).Delete
    End If
    
    
    
   ' MsgBox "'Amount Past Due' has been moved in front of 'Risk Factor'."
End Sub


Function FindHeaderCol19(ws As Worksheet, header As String) As Long
    Dim rng As Range
    Set rng = ws.Rows(19).Find(What:=header, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False)
    If Not rng Is Nothing Then
        FindHeaderCol19 = rng.Column
    Else
        FindHeaderCol19 = 0 ' Return 0 if the header is not found
    End If
End Function





Function FindHeaderCol2(ws As Worksheet, header As String) As Long
    Dim rng As Range
    Set rng = ws.Rows(2).Find(What:=header, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False)
    If Not rng Is Nothing Then
        FindHeaderCol2 = rng.Column
    Else
        FindHeaderCol2 = 0 ' Return 0 if the header is not found
    End If
End Function

