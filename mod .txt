Attribute VB_Name = "Module4"
Sub ReorderColumns()
' ReorderColumns Macro
'
' This macro moves the appropriate columns in order to better work with the 'bdcdef May24' report
' It also adds a new column in order to better generate the 'Net Balance'

'
    Columns("F:F").Select
    Selection.Cut Destination:=Columns("J:J")
    Columns("H:H").Select
    Selection.Cut Destination:=Columns("F:F")
    Columns("I:I").Select
    Selection.Cut Destination:=Columns("H:H")
    Columns("J:J").Select
    Selection.Cut Destination:=Columns("I:I")
   ' Columns("I:I").Select
     Columns("F:F").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
     Range("F2").Select
    ActiveCell.FormulaR1C1 = "Net Balance "
    Range("F3").Select
    
    
End Sub
Sub FixReportLayoutAndAddSummary()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim currentRow As Long
    Dim sectionHeader As String
    Dim principleTotal As Double
    Dim netBalanceTotal As Double
    Dim reportDate As String
    Dim colPrinciple As Long
    Dim colNetBalance As Long
    Dim fistDayCurrentMonth As Date
    Dim previousMonth As Date
    Dim previousYr As String 'hardcoded for now,needs to be linked in future to actual

    ' Set the worksheet (change "Sheet1" to your specific sheet name if needed)
    Set ws = ThisWorkbook.Worksheets("Pursuit-CDC")
    firstDay = DateSerial(Year(Date), Month(Date), 1)
    Debug.Print " firstDay: " & firstDay
    
    'firstDayCurrentMonth = DateAdd("m", -1, firstDay)
    previousMonth = Format(DateAdd("d", -1, firstDayCurrentMonth), "mm/dd/yyyy")
    'previousYr = Format(DateAdd("y", -1, PreviuosMonth), "mm/dd/yy")
    
    
    ' Find the columns for "Principal" and "Net Balance"
    colPrinciple = FindHeaderCol(ws, "Principal")
    colNetBalance = FindHeaderCol(ws, "Net Balance")
    
    ' If necessary columns are not found, exit the subroutine
    If colPrinciple = 0 Or colNetBalance = 0 Then
        MsgBox "Necessary columns not found!"
        Exit Sub
    End If

    ' Get the last row in the sheet
    lastRow = ws.Cells(ws.Rows.Count, colPrinciple).End(xlUp).row
    Debug.Print "LastRow Before: " & lastRow

    ' Initialize the report date
    reportDate = DateAdd("d", -1, firstDay)
    previousYr = DateAdd("yyyy", -1, reportDate)
   
    Debug.Print "Prev Date: " & previousYr
    
    Debug.Print " Date: " & reportDate

    ' Loop through all rows to find sections and calculate totals
    For currentRow = 1 To lastRow * 2 ' Assuming headers are in the first row
        If IsSectionHeader(ws.Cells(currentRow, 1).Value) Then
            If sectionHeader <> "" Then
                ' Add a summary box after the previous section
                AddSummaryBox ws, currentRow, principleTotal, netBalanceTotal, reportDate, previousYr
                

                
                ' Reset totals
                principleTotal = 0
                netBalanceTotal = 0
            End If
            ' Update the section header
            sectionHeader = ws.Cells(currentRow, 1).Value
        Else
            ' Accumulate totals for the current section
            principleTotal = principleTotal + Val(ws.Cells(currentRow, colPrinciple).Value)
            netBalanceTotal = netBalanceTotal + Val(ws.Cells(currentRow, colNetBalance).Value)
        End If
    Next currentRow

    ' Add a summary box after the last section
    
    lastRow = ws.Cells(ws.Rows.Count, colPrinciple).End(xlUp).row
    Debug.Print "LastRow After: " & lastRow
    AddSummaryBox ws, lastRow + 1, principleTotal, netBalanceTotal, reportDate, previousYr

   ' MsgBox "Report layout fixed and summary boxes added!"
End Sub

Sub AddSummaryBox(ws As Worksheet, ByRef currentRow As Long, principleTotal As Double, netBalanceTotal As Double, reportDate As String, previousYr As String)
   
    ' Insert two new rows
    ws.Rows(currentRow).Insert Shift:=xlDown
    ws.Rows(currentRow).Insert Shift:=xlDown
    ws.Rows(currentRow).Insert Shift:=xlDown

    ' Populate the first new row with totals and the report date
    ws.Cells(currentRow + 1, 5).Value = Format(principleTotal, "#,##0.00")
    ws.Cells(currentRow + 1, 6).Value = Format(netBalanceTotal, "#,##0.00")
    ws.Cells(currentRow + 1, 4).Value = reportDate
    ws.Cells(currentRow + 2, 4).Value = previousYr
    ws.Range(ws.Cells(currentRow + 1, 4), ws.Cells(currentRow + 2, 6)).Font.Bold = True
    ws.Range(ws.Cells(currentRow + 1, 4), ws.Cells(currentRow + 2, 6)).BorderAround LineStyle:=xlContinuous, Weight:=xlThick, Color:=Black
    
    ' Adjust the current row counter
    currentRow = currentRow + 2
  
End Sub



Function FindHeaderCol(ws As Worksheet, header As Variant)
    Dim rng As Range
    Set rng = ws.Rows(2).Find(What:=header, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False)
    If Not rng Is Nothing Then
        FindHeaderCol = rng.Column
    Else
        FindHeaderCol = 0 ' Return 0 if the header is not found
    End If
End Function

Function IsSectionHeader(header As String) As Boolean
    Select Case header
        Case "1-30 Days", "30 Days", "60 Days", "Over 90 Days", "Matured", "Non-Accrual"
            IsSectionHeader = True
        Case Else
            IsSectionHeader = False
    End Select
End Function

Sub MoveLoansToNonAccrualSection()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim currentRow As Long
    Dim nonAccrualRow As Long
    Dim colNonAccrual As Long
    Dim NonAccrual As Variant
    Dim headerFound As Boolean

    ' Set the worksheet (change "Sheet1" to your specific sheet name if needed)
    Set ws = ThisWorkbook.Worksheets("Pursuit-CDC")
    If ws Is Nothing Then
        MsgBox "Sectioned Data worksheet not found!"
        Exit Sub
    End If

    ' Find the column for "Non-Accrual"
    colNonAccrual = FindHeaderCol(ws, "Non-Accrual")
    If colNonAccrual = 0 Then
        MsgBox "Non-Accrual column not found!"
        Exit Sub
    End If

    ' Get the last row in the worksheet
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).row

    ' Find the "Non-Accrual" header row or create it if it doesn't exist
    nonAccrualRow = FindHeaderRow(ws, "Non-Accrual")
    If nonAccrualRow = 0 Then
        nonAccrualRow = lastRow + 1
        ws.Cells(nonAccrualRow, 1).Value = "Non-Accrual"
        ws.Cells(nonAccrualRow, 1).Font.Bold = True
        ws.Cells(nonAccrualRow, 1).Font.Underline = xlUnderlineStyleSingle
    End If

    ' Loop through all rows to find loans with Non-Accrual status of 1 or 2
    For currentRow = 2 To lastRow ' Assuming headers are in the first row
        NonAccrual = ws.Cells(currentRow, colNonAccrual).Value
        If NonAccrual = 1 Or NonAccrual = 2 Then
            ' Insert a new row below the Non-Accrual header
            ws.Rows(nonAccrualRow + 1).Insert Shift:=xlDown
            ' Move the current row to the new row below the Non-Accrual header
            ws.Rows(currentRow).Copy Destination:=ws.Rows(nonAccrualRow + 1)
            ws.Rows(currentRow).ClearContents ' Optionally clear the original row

            ' Update the nonAccrualRow position
            nonAccrualRow = nonAccrualRow + 1
        End If
    Next currentRow

    ' Autofit columns
    ws.Columns.AutoFit

   ' MsgBox "Loans with Non-Accrual status 1 or 2 have been moved to the Non-Accrual section successfully!"
End Sub

Function FindHeaderRow(ws As Worksheet, header As String) As Long
    Dim rng As Range
    Set rng = ws.Columns(1).Find(What:=header, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False)
    If Not rng Is Nothing Then
        FindHeaderRow = rng.row
    Else
        FindHeaderRow = 0 ' Return 0 if the header is not found
    End If
End Function


